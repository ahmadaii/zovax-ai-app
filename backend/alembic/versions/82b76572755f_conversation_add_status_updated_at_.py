"""conversation: add status/updated_at/token_count + text->Text

Revision ID: 82b76572755f
Revises: 1479be412f7b
Create Date: 2025-10-05 14:42:16.301238

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '82b76572755f'
down_revision: Union[str, Sequence[str], None] = '1479be412f7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # 1) make 'text' a large TEXT
    op.alter_column("conversations", "text", type_=sa.Text(), existing_nullable=False)

    # 2) add columns WITH safe defaults so existing rows pass NOT NULL
    op.add_column(
        "conversations",
        sa.Column("updated_at", sa.DateTime(), nullable=True)
    )
    op.add_column(
        "conversations",
        sa.Column("status", sa.String(), nullable=False, server_default="complete")
    )
    op.add_column(
        "conversations",
        sa.Column("token_count", sa.Integer(), nullable=False, server_default="0")
    )

    # 3) backfill updated_at for existing rows
    op.execute("UPDATE conversations SET updated_at = created_at WHERE updated_at IS NULL")

    # 4) (optional but recommended) remove the server defaults so app-level defaults apply
    op.alter_column("conversations", "status", server_default=None)
    op.alter_column("conversations", "token_count", server_default=None)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('conversations', 'text',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.drop_column('conversations', 'status')
    op.drop_column('conversations', 'updated_at')
    # ### end Alembic commands ###
